-- WHERE절
SELECT * FROM EMPLOYEES;

SELECT FIRST_NAME, JOB_ID FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG';
SELECT * FROM EMPLOYEES WHERE SALARY >= 15000;
SELECT * FROM EMPLOYEES WHERE SALARY < 10000;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID <> 50; -- 같지않음
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven'; -- 저장된 데이터는 대소문자를 구별함.
SELECT * from employees where hire_date = '04/01/30';
SELECT * FROM EMPLOYEES WHERE HIRE_DATE <= '04/01/30';

-- BETWEEN A AND B (이상 ~ 이하)
SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 15000;
SELECT * FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '03/01/01' AND '03/12/31';

-- IN 연산자
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (50, 60, 70);
SELECT * FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG', 'AD_VP');

--LIKE 연산자
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '03%'; -- 03으로 시작하는
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%01'; -- 01으로 끝나는
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '%05%'; -- 05가 들어간
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '_a%'; -- 2번째에 a가 들어간 '_'는 자릿수
SELECT * FROM EMPLOYEES WHERE HIRE_DATE LIKE '___05%';

-- IS NULL, IS NOT NULL
SELECT * FROM EMPLOYEES;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT = 'NULL';
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT  IS NULL;
SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT  IS NOT NULL;

-- AND, OR - AND가 OR보다 연산순위가 빠르다.
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR SALARY >= 5000; -- 둘중 하나만 만족해도 나옴
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' AND SALARY >= 5000; -- 둘다 만족하는
SELECT * FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'IT_MGR' AND SALARY >= 5000;


-- NOT 부정의 의미

---------------------------------------------------

-- ORDER BY 구문
SELECT * FROM EMPLOYEES ORDER BY SALARY; -- ASC가 DEFALUT
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC;
SELECT * FROM EMPLOYEES ORDER BY DEPARTMENT_ID, SALARY DESC; -- 먼저 부서아이디로 정렬, 등순위에 대해서 SALARY

SELECT FIRST_NAME, SALARY * 12 AS 연봉 FROM EMPLOYEES ORDER BY 연봉 DESC; -- 엘리어스를 정렬해서 사용할수있음
SELECT FIRST_NAME, SALARY * 12 AS 연봉 FROM EMPLOYEES WHERE 연봉 >= 10000; -- WHERE에선 사용못함~



