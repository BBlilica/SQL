-- 두 테이블에 Pk가 있음

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

--INNER JOIN(내부조인) - 붙을 데이터 없으면 안나옴 [INNER] 키워드 생략 가능.
SELECT * FROM INFO INNER AUTH ON INFO.AUTH_ID = AUTH.AUTH_ID;

--LEFT [OUTER]생략가능 JOIN (외부조인) - 붙을 데이터가 없으면 NULL (가장 많이 쓰이는 JOIN)
SELECT * FROM INFO LEFT OUTER JOIN AUTH ON INFO.AUTH_ID = AUTH_ID; 

--RIGHT OUTER JOIN (조인 기준 오른쪽 다 출력)
SELECT * FROM INFO RIGHT OUTER JOIN AUTH ON INFO.AUTH_ID = AUTH_ID;

--FULL OUTER JOIN (양쪽다 출력)
SELECT * FROM INFO FULL OUTER JOIN AUTH ON INFO.AUTH_ID = AUTH_ID;

--CROSS JOIN(오른쪽 행마다 왼쪽이 다붙음)
SELECT * FROM INFO CROSS JOIN AUTH;


SELECT * FROM INFO;

-- INNER JOIN
SELECT * FROM INFO INNER JOIN AUTH ON INFO.AUTH_ID = AUTH.AUTH_ID; -- 붙을 수 없는 데이터는 안나옴

--컬럼 지정 - AUTH_ID는 양쪽에 다 있기 때문에, 출력할 때, 테이블명.컬럼명 으로 지정해야 합니다.

SELECT ID, TITLE, CONTENT, INFO.AUTH_ID, NAME, JOB
FROM INFO INNER JOIN AUTH ON INFO.AUTH_ID = AUTH.AUTH_ID;

--테이블 ALIAS(별칭)
SELECT I.ID,
             I.AUTH_ID,
            A.NAME
FROM INFO I
INNER JOIN AUTH A
ON I.AUTH_ID = A.AUTH_ID;

--USING절 -양쪽 테이블에 동일 키 이름으로 연결할 때 사용이 가능합니다.
SELECT *
FROM INFO
INNER JOIN AUTH A
USING (AUTH_ID); 

-------------------------------------------------------------

--외부조인이라 부릅니다.
--LEFT OUTER JOIN - 왼쪽 테이블이 기준이 되고, 왼쪽테이블은 다나옴
SELECT *
FROM INFO I
LEFT OUTER JOIN AUTH A
ON I.AUTH_ID = A.AUTH_ID;

--RIGHT OUTER JOIN - 오른쪽 테이블이 기준이 되고, 오른쪽 테이블은 다나옴
SELECT *
FROM INFO I
RIGHT OUTER JOIN AUTH A
ON I.AUTH_ID = A.AUTH_ID;

--FULL OUTER JOIN - 양쪽 테이블이 누락없이 다나옴 (왼쪽 먼저)
SELECT *
FROM INFO I
FULL OUTER JOIN AUTH A
ON I.AUTH_ID = A.AUTH_ID;

-- 번외 CROSS조인 - 잘못된 조인의 형태 (오라클에서 "카시디안 프로덕트"라고 부릅니다.)
SELECT *
FROM INFO I
CROSS JOIN AUTH A;

------------------------------------------------------------
--DEPARTMENT_ID  = FK
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;

SELECT *
FROM EMPLOYEES E
LEFT JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--> 조인이 3개도 되는가? YES
SELECT *
FROM EMPLOYEES E
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
LEFT JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID;
